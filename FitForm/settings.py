"""
Django settings for FitForm project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-8-c5#nv(7hq8!a!!_%#!tv87w2yg3c0c%dqnpzo^jtf%(e(cae'

# SECURITY WARNING: don't run with debug turned on in production!

import os # Make sure this is imported at the top
# ... other imports ...

# SECURITY WARNING: don't run with debug turned on in production!
# Read DEBUG from environment variable, default to True for local dev
# Important: Set DEBUG=False in Render's environment variables!
DEBUG = os.environ.get('DEBUG', 'True') == 'True'

# --- ADD THIS ENTIRE BLOCK ---
# Read ALLOWED_HOSTS from environment variable DJANGO_ALLOWED_HOSTS
ALLOWED_HOSTS_STRING = os.environ.get('DJANGO_ALLOWED_HOSTS')

if ALLOWED_HOSTS_STRING:
    # If the env var exists (on Render), split it by comma
    ALLOWED_HOSTS = ALLOWED_HOSTS_STRING.split(',')
else:
    # If the env var DOES NOT exist (running locally), use defaults
    ALLOWED_HOSTS = ['localhost', '127.0.0.1']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # --- BẮT ĐẦU THÊM VÀO ---
    
    # Ứng dụng bên thứ ba
    'rest_framework',        # 1. Django REST Framework
    'rest_framework.authtoken', # 2. Hỗ trợ Token Authentication
    'django_filters',          # Hỗ trợ filter trong DRF
    'corsheaders',         # 3. Cho phép Frontend gọi API
    
    'django.contrib.sites',  # 4. Bắt buộc cho allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount', # (Nếu bạn muốn có Google/FB Login)
    
    'dj_rest_auth',
    'dj_rest_auth.registration',
    
    # Ứng dụng của bạn (phải ở cuối)
    'api.apps.ApiConfig',  # (Hoặc chỉ 'api')
    
    # --- KẾT THÚC THÊM VÀO ---
]

# Thêm dòng này ở gần cuối file, bắt buộc cho allauth
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',

    # --- THÊM VÀO ĐÂY ---
    'corsheaders.middleware.CorsMiddleware',
    # --- KẾT THÚC THÊM VÀO ---

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # --- THÊM DÒNG NÀY VÀO ĐÂY ---
    'allauth.account.middleware.AccountMiddleware',
    # ---
]

ROOT_URLCONF = 'FitForm.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'FitForm.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASE_URL = os.environ.get('DATABASE_URL')

if DATABASE_URL:
    # === THIS BLOCK SHOULD RUN ON RAILWAY ===
    DATABASES = {
        'default': dj_database_url.config(
            default=DATABASE_URL,
            conn_max_age=600
        )
    }
else:

    DATABASES = {
        'default': {
            'ENGINE': 'mssql',

            # --- Điền thông tin của bạn ---
            'NAME': 'FitForm_db',               # Tên CSDL bạn vừa tạo ở Giai đoạn 2
            'USER': 'sa',                       # User bạn đã cấu hình ở Giai đoạn 1
            'PASSWORD': 'Minhpham@0203', # Mật khẩu bạn đặt cho user 'sa'
            'HOST': 'localhost\\MSSQLSERVER01',
            # 'PORT': '1433',                     # Port mặc định
            # ---

            'OPTIONS': {
                'driver': 'ODBC Driver 17 for SQL Server', 
                # LƯU Ý: Tên driver này phải khớp với bản ODBC bạn cài.
                # Nó có thể là 'ODBC Driver 18 for SQL Server' nếu bạn cài bản mới.
            },
        }
    }


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# --- THÊM VÀO CUỐI FILE ---

# 1. Cấu hình CORS (Cross-Origin Resource Sharing)
# Cho phép server Frontend (ví dụ React chạy ở port 3000) gọi API
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
    # Thêm domain của frontend khi deploy ở đây
]
# Nếu bạn dùng Cookie (Session Auth) thay vì Token, bật dòng này
# CORS_ALLOW_CREDENTIALS = True 

# Hoặc, để test nhanh (không khuyến khích khi deploy):
# CORS_ALLOW_ALL_ORIGINS = True


# 2. Cấu hình Django REST Framework (DRF)
REST_FRAMEWORK = {
    # Cấu hình xác thực mặc định
    'DEFAULT_AUTHENTICATION_CLASSES': [
        # Sử dụng Token (gửi qua Header `Authorization: Token ...`)
        'rest_framework.authentication.TokenAuthentication', 
        
        # (Lựa chọn khác: Dùng Session/Cookie, dễ cho web)
        # 'rest_framework.authentication.SessionAuthentication',
    ],
    # Cấu hình quyền truy cập mặc định
    'DEFAULT_PERMISSION_CLASSES': [
        # Mặc định: Mọi API đều yêu cầu phải đăng nhập
        'rest_framework.permissions.IsAuthenticated',
    ],

    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend'
    ]
}

# 3. Cấu hình dj-rest-auth
# Yêu cầu người dùng xác thực email (tùy chọn, có thể set 'none')
ACCOUNT_EMAIL_VERIFICATION = 'none' 
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = True # (Bạn có thể set False nếu chỉ muốn login bằng email)